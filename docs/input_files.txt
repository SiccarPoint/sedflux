/*! \page input_files_sec Input Files

\section sed_input_files Sedflux Input Files


The main input files are:
- \subpage sub_sec_init
- \subpage sub_sec_bathy
- \subpage sub_sec_sediment
- \subpage sub_sec_process


The above are all required files.  Files that are optionally included are:
- \subpage sub_sec_river
- \subpage sub_sec_sea_level
- \subpage sub_sec_subsidence

Many of these files, are of a similar format (sedflux key-file).
Although the format is simple, you may want to have a quick look here:
\subpage sub_sec_key_file
for a description.

*/

/** \page sub_sec_key_file Sedflux Key-File

Many of the (ascii) input files for sedflux are of a common format.  I'll
often refer to them as sedflux key-files.  They are plain text files that
define a series of groups.  Each group then contains a series of key-value
pairs.  A group begins with its name surrounded by braces and ends at the
begining of the next group.

The key-value pairs then follow, one per line.  They consist of a parameter
name (or key), follows by a colon, and then the value.  As an example, a
valid group looks like,
\code
[ global ]
vertical resolution (m):   0.05
x resolution (m):          10000
y resolution (m):          100
\endcode
In this example, we've defined a group called \p global.  For this group,
we've set the values for three parameters.  There can be any number of groups
or key-value pairs per file.  In fact, the same group name can appear in the
same file more than once.  The data are not overwritten but a new instance
of the group created.  However, in some instances it may not make sense to have
multiple occurances of a group.
*/

/** \page sub_sec_init Initialization File
*/

/** \page sub_sec_bathy Bathymetry File
*/

/** \page sub_sec_process Process File
*/

/** \page sub_sec_river River File
*/

/** \page sub_sec_sea_level Sea-Level File
*/

/** \page sub_sec_subsidence Subsidence File

The format for sedflux subsidence files is different for the 2D and 3D versions
of sedflux.  In 2D mode, the subsidence file is a series of records that each contain
a time value, and comma delimated data that define the subsidence curve.  In
3D mode, the subsidence file is also a series of records that defines a time-varying
subsidence curve but is binary.

\section sec_2d_subsidence 2D subsidence file

The subsidence file in the following example contains two records that define the
subsidence of the profile at 0 and 100 years.  Each record begins with a header
contained in square brackets followed by two columns of data that define how
the profile subsides along its length.  The time is given in years, the position
(first column) in meters, and the subsidence rate (second column) in meters per year.
For times between records, sedflux interpolates linearly between records.

\code
[ Time: 0 ]    // Time of this record in years
0, 0           // Subsidence is zero at the origin
100000, -.2    //   and increases to -.2 m/y at 100km 

[ Time: 100 ]  // The second record is at 100 years
0,0
100000, -.1
\endcode

If the file contains only one record, then the subsidence rate is held constant
starting from the time indicated in the record header.  If the model runs
longer than the time of the last record, the subsidence curve is set to that
of the last record for the remainder of the simulation.

\section sec_3d_subsidence 3D subsidence file

The subsidence file for 3D sedflux, contains a series of binary records
containing similar information as that of the 2D file described above.

The file begins with two 32-bit integers that define the size of the
subsidence grid for each record.  The first value is the number of
rows and the second the number of columns.

Records are then listed one after another.  Each record begins with
a double value that gives the time in years of the record.  The subsidence
data then follows as double values written row by row.  Subsidence values
are given in meters per year.

\note The size of the grid must match exactly that of the grid that is 
defined in the bathymetery file.

\note The byte order of the file must be the same as that of the machine
that the simulation will be run on.

*/

/** \page sub_sec_sediment Sediment File

The characteristics of each sediment type is defined by key-value pairs
in its own group.  A group begins with <tt>[ <group-name> ]</tt>, is 
followed by a series of key-values pairs, and ends at the start of the
next group (or EOF).  The key-value lines are of the
form:
\code
<name-of-key> : <value>
\endcode
Groups are listed one after another.  The order that they occur here is
important.  sedflux assumes that the order they appear here corresponds
to the same order as the river input files.


For a sediment file, the required parameters are:
- <tt>grain size</tt>                 Grain size (in microns) of the sediment type.
- <tt>grain density</tt>              Density (in kg/m^3) of the sediment grains.
- <tt>saturated density</tt>          Bulk density (in kg/m3) that the sediment saturated with water.
- <tt>minimum void ratio</tt>         Void ratio (-) of the sediment in its closest packed state.
- <tt>diffusion coefficient</tt>      Diffusion index between 0 (unable to be moved) and 1 (easily moved).
- <tt>removal rate</tt>               Removal rate (in 1/day)
- <tt>consolidation coefficient</tt>  How quickly the sediment consolidates.
- <tt>compaction coefficient</tt>     Rate that sediment is compacted under load.

\note The first grain type listed in the sediment file is assumed
      by sedflux to be bedload!  That is, it is not carried by the
      plume process but by the bedload dumping process.
*/

